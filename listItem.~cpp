//---------------------------------------------------------------------------


#pragma hdrstop

#include "listItem.h"

//---------------------------------------------------------------------------

#pragma package(smart_init)
listItems::listItems(IPHeader *hdr){
  // выделение памяти под корень списка
  listItems::lst = (struct list*)malloc(sizeof(struct list));
  listItems::lst->hdr = hdr;
  listItems::lst->next = NULL; // указатель на следующий узел
  listItems::lst->prev = NULL; // указатель на предыдущий узел
}
struct list* listItems::addItem(IPHeader *hdr){
  struct list *temp, *p;
  temp = listItems::lst;
  listItems::lst->next = temp;
  listItems::lst->prev = NULL;
  listItems::lst->hdr = hdr;
  temp->prev = listItems::lst;
  /*temp = (struct list*)malloc(sizeof(list));
  p = listItems::lst->next; // сохранение указателя на следующий узел
  listItems::lst->next = temp; // предыдущий узел указывает на создаваемый
  temp->hdr = hdr; // сохранение поля данных добавляемого узла
  temp->next = p; // созданный узел указывает на следующий узел
  temp->prev = listItems::lst; // созданный узел указывает на предыдущий узел
  if (p != NULL)
    p->prev = temp;
  return(temp); */
}
listItems::~listItems(){
   free(listItems::lst);
}
